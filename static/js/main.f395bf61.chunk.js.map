{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","components/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","ckass","map","genre","index","key","slice","App","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","console","log","id","medium_cover_image","React","Component","Navigation","Detail","props","location","history","undefined","push","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"sUAeeA,MAZf,WACE,OACE,yBAAKC,UAAU,oBACb,oIAIA,yD,gFCiCSC,MArCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKN,UAAU,SACb,kBAAC,IAAD,CACEO,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,YAGzC,yBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,yBAAKF,UAAU,eACb,wBAAIA,UAAU,gBAAgBE,GAC9B,wBAAIU,MAAM,eAAeT,GACzB,wBAAIH,UAAU,iBACXM,EAAOO,KAAI,SAACC,EAAOC,GAClB,OACE,wBAAIC,IAAKD,EAAOf,UAAU,gBACvBc,OAKT,uBAAGd,UAAU,kBAAkBI,EAAQa,MAAM,EAAG,KAAhD,WC8BKC,G,kNApDbT,MAAQ,CACNU,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,kEAYVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKlB,MAA3BU,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASpB,UAAU,aAChBmB,EACC,yBAAKnB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,cAGF,yBAAKA,UAAU,UACZoB,EAAOP,KAAI,SAACe,GAEX,OADAC,QAAQC,IAAIF,GAEV,kBAAC,EAAD,CACEZ,IAAKY,EAAMG,GACXA,GAAIH,EAAMG,GACV5B,KAAMyB,EAAMzB,KACZD,MAAO0B,EAAM1B,MACbE,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMI,mBACd1B,OAAQsB,EAAMtB,kB,GA1Cd2B,IAAMC,Y,MCQTC,MATf,WACE,OACE,yBAAKnC,UAAU,OACb,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCkBS6B,E,kLApBQ,IAAD,EACYT,KAAKU,MAA3BC,EADU,EACVA,SAAUC,EADA,EACAA,aAEKC,IAAnBF,EAAS7B,OACX8B,EAAQE,KAAK,O,+BAKP,IACAH,EAAaX,KAAKU,MAAlBC,SAER,OAAIA,EAAS7B,MACJ,8BAAO6B,EAAS7B,MAAMP,OAEtB,S,GAjBQ+B,IAAMC,WCeZhB,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwB,KAAK,IAAIC,OAAO,EAAMC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAW7C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,gBAAgBE,UAAWR,MCR7CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f395bf61.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        \"Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.\"\r\n      </span>\r\n      <span>- George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// state가 불필요하므로 함수형 컴포넌트로 작성\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: \"/movie-detail\",\r\n          state: { year, title, summary, poster, genres },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 ckass=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => {\r\n              return (\r\n                <li key={index} className=\"movie__genre\">\r\n                  {genre}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  // API 호출하여 영화 데이터 로드\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading..</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => {\r\n              console.log(movie);\r\n              return (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\n// 클래스형 컴포넌트로 정의\r\n// 왜? Detail 컴포넌트가 마운트될 때 push 함수를 실행하기 위함\r\nclass Detail extends React.Component {\r\n  // 2. 컴포넌트가 렌더링되면(=마운트되면) 실행\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    // Home에서 오지 않을 때 Home으로 리다이렉트\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  // 1. 페이지를 렌더링하고\r\n  render() {\r\n    const { location } = this.props;\r\n    // Home에서 온 경우\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Detail from \"./components/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie-detail\" component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n// App 컴포넌트를 id가 root인 element 사이에 렌더링\r\n// 리액트는 최종으로 단 한 개의 컴포넌트만 렌더링\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}